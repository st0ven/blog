@import "~styles/colors";

/* color mapping for available themes within the app. */
$theme-map: (
  dark: (
    --color-dark: map-get($colors, white),
    --color-dark1:
      desaturate(adjust-hue(lighten(map-get($colors, black), 50%), -40%), 8%),
    --color-light2:
      desaturate(adjust-hue(lighten(map-get($colors, black), 10%), -20%), 5%),
    --color-light1:
      desaturate(adjust-hue(lighten(map-get($colors, black), 3%), -5%), 3%),
    --color-light: map-get($colors, black),
    --color-primary: map-get($colors, lilac),
    --color-secondary: map-get($colors, tangerine),
  ),
  light: (
    --color-dark: map-get($colors, black),
    --color-dark1:
      desaturate(adjust-hue(lighten(map-get($colors, black), 33%), -20%), 10%),
    --color-light2:
      desaturate(adjust-hue(lighten(map-get($colors, black), 80%), -30%), 7%),
    --color-light1:
      desaturate(adjust-hue(lighten(map-get($colors, black), 88%), -40%), 5%),
    --color-light: map-get($colors, white),
    --color-primary: map-get($colors, violet),
    --color-secondary: map-get($colors, sienna),
  ),
);

/* populates css color variable mapping to theme-map */
@mixin map-css-vars-by-theme($theme) {
  @each $color-var, $color in map-get($theme-map, $theme) {
    #{$color-var}: #{get-primaries-from-color($color)};
  }
}

@mixin theme($theme) {
  @media (prefers-color-scheme: $theme) {
    @content;
  }
}
