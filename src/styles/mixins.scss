@import "~styles/queries";
@import "~styles/themes";
@import "~styles/units";

@mixin anchor-underline($color: primary, $size: 1px) {
  color: rgba-color($color);
  outline: none;
  padding: $unit-size-sub/2 0;
  background-position: left bottom;
  background-size: auto $size;
  background-repeat: repeat-x;
  background-image: linear-gradient(
    to top,
    rgba-color($color, 1) $size,
    transparent $size
  );
}

@mixin app-link($color: primary) {
  @include anchor-underline($color, 1px);
  color: rgba-color($color);
  font-weight: 400;
  cursor: pointer;
}

@mixin anchor-with-icon($align: left) {
  .icon {
    position: relative;
    transform: translateY(25%);
    @if ($align == left) {
      margin-right: $unit-size-base;
    } @else if($align == right) {
      margin-left: $unit-size-base;
    }
  }
}

@mixin css-underline($size: 2px, $color: foreground-0, $opacity: 1) {
  display: inline;
  padding-bottom: $size;
  background-repeat: repeat-x;
  background-image: linear-gradient(
    to top,
    rgba-color($color, $opacity) $size,
    transparent $size
  );
}

@mixin horizontal-rule($color: background-2) {
  background: rgba-color($color);
  width: 100%;
  max-height: none;
  height: $unit-size-sub;
  border: none;
  opacity: 0.5;
  margin: $unit-size-medium 0;
  @include breakpoint(large) {
    margin: $unit-size-large 0;
  }
}

@mixin responsive-spacing($property: "margin", $coefficient: 1) {
  #{$property}: $unit-size-small*$coefficient;
  @include breakpoint(medium) {
    #{$property}: $unit-size-medium*$coefficient;
  }
  @include breakpoint(large) {
    #{$property}: $unit-size-large*$coefficient;
  }
}
