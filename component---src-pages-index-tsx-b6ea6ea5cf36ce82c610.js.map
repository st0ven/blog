{"version":3,"sources":["webpack:///./src/resources/post-builder.js","webpack:///./node_modules/react-feather/dist/icons/arrow-right-circle.js","webpack:///./src/components/tag.tsx","webpack:///./src/components/topic-card.tsx","webpack:///./src/components/article-group.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/classnames/index.js"],"names":["RichText","require","module","exports","buildSlug","prismicTitle","extractedTitleString","asText","encodeURIComponent","replace","toLowerCase","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","props","color","size","otherProps","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","points","x1","y1","x2","y2","propTypes","string","oneOfType","number","defaultProps","Tag","value","className","styles","tag","slug","a","navigate","TopicCard","title","subtitle","date","tags","media","uid","useCallback","redirectHandler","topicCard","verticalRule","dayOfTheMonth","Number","split","to","articleLink","icon","map","renderTags","medium","console","log","renderThumbnails","ArticleGroup","month","year","articles","articleGroup","topics","node","topic","_meta","authored_date","IndexPage","data","prismic","allBlog_articles","edges","chronologicalArticles","useRef","organizePostChronologically","page","current","index","divider","renderChronologicalArticleGroups","postsQuery","hasOwn","classNames","classes","arg","argType","push","Array","isArray","inner","join"],"mappings":"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","file":"component---src-pages-index-tsx-b6ea6ea5cf36ce82c610.js","sourcesContent":["const { RichText } = require(\"prismic-reactjs\")\n\n/* \nBuild a slug for a given blog post as fetched from a Prismic backend API call\n  prismicTitle: A prismic object which has the structure of :\n    [{\n      type: string,\n      text: string.\n      ...\n    }...]\n  authored_date: is a string in the format of 'mm-dd-yyyy'\n*/\nmodule.exports = {\n  buildSlug: (prismicTitle) => {\n    const extractedTitleString = RichText.asText(prismicTitle)\n    const urlSafeTitle = encodeURIComponent(\n      extractedTitleString.replace(/\\s/g, \"-\")\n    ).toLowerCase()\n    const slug = `articles/${urlSafeTitle}`\n    return slug\n  },\n}\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar ArrowRightCircle = function ArrowRightCircle(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), React.createElement(\"polyline\", {\n    points: \"12 16 16 12 12 8\"\n  }), React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n};\n\nArrowRightCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowRightCircle.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default ArrowRightCircle;","import React from \"react\"\nimport cx from \"classnames\"\nimport styles from \"~components/tag.module.scss\";\n\ninterface TagProps {\n  value: string\n  className?: string\n}\n\nexport function Tag({ value, className }: TagProps) {\n  return <span className={cx(className, styles.tag)}>#{value}</span>\n}\n","/*\nTopic Cards\n------------\nThis component is meant to render a preview/peek at the nature\nof an existing article/blog post. The card itself should display\nsome basic information about that content, such as the date,\ntitle/subtitle, any associated tags with it, and other meta content.\n\nA user should be able to interact with the tag in such a way that clicking\non the content or some clear CTA should link out to the content\nas a dedicated route/link to view the full content.\n*/\nimport React, { useCallback } from \"react\"\nimport cx from \"classnames\"\nimport { ArrowRightCircle } from \"react-feather\"\nimport { navigate } from \"@reach/router\"\nimport { Link } from \"gatsby\"\nimport { RichText } from \"prismic-reactjs\"\nimport { Tag } from \"~components/tag\"\n\nimport styles from \"~components/topic-card.module.scss\"\n\n// js module to help build our post slug urls\nconst { buildSlug } = require(\"~resources/post-builder\")\n\ninterface TopicCardProps {\n  title: Array<any>\n  subtitle?: Array<any>\n  date: any\n  tags?: Array<string>\n  media?: Array<any>\n  uid: string\n}\n\n/*\nDate string will likely come in a complex format.\nthis function should manage disentangling that and returning\nthe appropriate day of the month to be displayed as a number.\n*/\nfunction extractDayFromDateString(dateString: string): number {\n  // NOZTE: expected format here of dateString (from API) is\n  // YYYY-MM-DD\n  return Number(dateString.split(\"-\")[2])\n}\n\n// iterate through list of tags and render appropriate JSX/Component\n// to return a collection of ReactElements\nfunction renderTags(tags: Array<string>): Array<React.ReactElement> {\n  return tags.map((tag: string) => (\n    <Tag key={tag} className={styles.tag} value={tag} />\n  ))\n}\n\nfunction renderThumbnails(media: any) {\n  return media.map((medium: any) => {\n    console.log(medium)\n  })\n}\n\nasync function redirectHandler(slug: string) {\n  await navigate(slug)\n}\n\n/* \nMain exportable function for this component.\n*/\nexport function TopicCard({\n  title,\n  subtitle,\n  date,\n  tags,\n  media,\n  uid,\n}: TopicCardProps) {\n  const slug: string = buildSlug(title)\n  const handleNavigation = useCallback(() => {\n    redirectHandler(slug)\n  }, [slug])\n  return (\n    <aside className={styles.topicCard}>\n      <div className={styles.verticalRule}></div>\n      <div className={styles.dayOfTheMonth}>\n        {extractDayFromDateString(date)}\n      </div>\n      {/* right column - Will hold text content */}\n      <h5 className={styles.title}>\n        <Link to={slug} className={styles.articleLink}>\n          {RichText.asText(title)}\n          <ArrowRightCircle className={styles.icon} />\n        </Link>\n      </h5>\n      <h6 className={styles.subtitle}>{RichText.asText(subtitle)}</h6>\n      {tags ? <div className={styles.tags}>{renderTags(tags)}</div> : null}\n      {media ? <div>{renderThumbnails(media)}</div> : null}\n    </aside>\n  )\n}\n","import React from \"react\"\nimport { TopicCard } from \"~components/topic-card\"\nimport { ChronologicalArticleGroup } from \"~resources/chronology\"\nimport styles from \"~components/article-group.module.scss\"\n\nexport function ArticleGroup({\n  month,\n  year,\n  articles,\n}: ChronologicalArticleGroup) {\n  return (\n    <div className={styles.articleGroup}>\n      <h3 className={styles.month}>{month}</h3>\n      <h6 className={styles.year}>{year}</h6>\n      <ul className={styles.topics}>\n        {articles.map((node: any) => (\n          <li className={styles.topic} key={node._meta.uid}>\n            <TopicCard\n              title={node.title}\n              subtitle={node.subtitle}\n              date={node.authored_date}\n              tags={node._meta.tags}\n              uid={node._meta.uid}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","import React, { useRef } from \"react\"\nimport cx from \"classnames\"\nimport { graphql } from \"gatsby\"\nimport \"~styles/global.scss\"\nimport styles from \"~pages/page.module.scss\"\nimport Layout from \"~components/layout\"\nimport SEO from \"~components/seo\"\nimport { ArticleGroup } from \"~components/article-group\"\nimport {\n  ChronologicalArticleGroup,\n  organizePostChronologically,\n} from \"~resources/chronology\"\n\n/*\nGiven a list of ChronologicalArticleGroups, will\niterate through groups and render each as a ReactNode\n*/\nfunction renderChronologicalArticleGroups(\n  chronologicalArticles: React.MutableRefObject<\n    Array<ChronologicalArticleGroup>\n  >\n): React.ReactNode {\n  return chronologicalArticles.current.map(\n    (articleGroup: ChronologicalArticleGroup, index: number) => (\n      <section key={`${articleGroup.year}-${articleGroup.month}`}>\n        {index ? <hr className={styles.divider} /> : null}\n        <ArticleGroup {...articleGroup} />\n      </section>\n    )\n  )\n}\n\nexport default function IndexPage({ data: { prismic } }) {\n  const { allBlog_articles } = prismic\n  const articles: Array<any> = allBlog_articles.edges\n  const chronologicalArticles: React.MutableRefObject<Array<\n    ChronologicalArticleGroup\n  >> = useRef(organizePostChronologically(articles))\n\n  return (\n    <div className={styles.page}>\n      <Layout>\n        <SEO title=\"Stephen Seator | UX/UI Blog\" />\n        {renderChronologicalArticleGroups(chronologicalArticles)}\n      </Layout>\n    </div>\n  )\n}\n\nexport const postsQuery = graphql`\n  query {\n    prismic {\n      allBlog_articles(last: 10) {\n        edges {\n          node {\n            subtitle\n            title\n            authored_date\n            body {\n              ... on PRISMIC_Blog_articleBodyMedia {\n                fields {\n                  related_media\n                }\n              }\n            }\n            _meta {\n              uid\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}